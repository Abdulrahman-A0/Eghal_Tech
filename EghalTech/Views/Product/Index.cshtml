@model IPagedList<Product>
@{
    ViewData["Title"] = "Products - EghalTech Admin";
    Layout = null;
}

<head>
    <link rel="stylesheet" href="~/css/products-index.css">
    <link rel="stylesheet" href="~/css/delete-modal.css">
    <link rel="stylesheet" href="~/css/admin-navbar.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css" rel="stylesheet">
</head>

<body>
    <partial name="_AdminNavbar" />
    <!-- Products Banner -->
    <div class="products-banner">
        <div class="container">
            <h1 class="products-title">Products</h1>
        </div>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <div class="container">
            <!-- Action Bar -->
            <div class="action-bar">
                <a asp-action="AddProduct" asp-controller="Product" class="btn btn-primary">
                    <i class="bi bi-plus-circle"></i>
                    Create New Product
                </a>
                <div class="search-container">
                    <input type="text" id="searchBox" placeholder="Search (Product Name)" class="search-input" />
                    <i class="bi bi-search search-icon"></i>
                </div>
            </div>

            <!-- Products Table -->
            <div class="table-container">
                <table class="products-table">
                    <thead>
                        <tr>
                            <th>Image</th>
                            <th>Name</th>
                            <th>Brand</th>
                            <th>Price</th>
                            <th>Stock Quantity</th>
                            <th>Category</th>
                            <th colspan="3">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var prod in @Model.OrderBy(p => p.Name))
                        {
                            <tr>
                                <td class="product-image">
                                <img src=~/img/product/@prod.ImageUrl alt="@prod.Name" class="product-thumbnail" />
                                </td>
                                <td class="product-name">@prod.Name</td>
                                <td>@prod.Brand</td>
                                <td class="price">$@prod.Price.ToString("F2")</td>
                                <td class="stock">@prod.StockQuantity</td>
                                <td>@prod.Category.Name</td>
                                <td class="actions">
                                    <a asp-controller="Store" asp-action="ProductDetails" asp-route-id="@prod.Id" class="btn btn-details">
                                        Details
                                    </a>
                                </td>
                                <td class="actions">
                                    <a asp-controller="Product" asp-action="Edit" asp-route-id="@prod.Id" class="btn btn-edit">
                                        Edit
                                    </a>
                                </td>
                                <td class="actions">
                                    <button type="button" class="btn btn-delete" onclick="showDeleteModal(@prod.Id, '@prod.Name')">
                                        Delete
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                @if (!Model.Any())
                {
                    <div class="no-products">
                        <i class="bi bi-box-seam"></i>
                        <h3>No products found</h3>
                        <p>Start by creating your first product.</p>
                        <a asp-action="AddProduct" asp-controller="Product" class="btn btn-primary">
                            <i class="bi bi-plus-circle"></i>
                            Create New Product
                        </a>
                    </div>
                }
            </div>

            <!-- Pagination -->
            @if (Model.PageCount > 1)
            {
                <div class="pagination-container">
                    @Html.PagedListPager(Model, page =>
                    Url.Action("Index", new { page, productName = Context.Request.Query["productName"] }),
                                new PagedListRenderOptions
                                {
                                    Display = PagedListDisplayMode.IfNeeded,
                                    DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                                    DisplayLinkToLastPage = PagedListDisplayMode.Always,
                                    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                                    DisplayLinkToNextPage = PagedListDisplayMode.Always,
                                    ClassToApplyToFirstListItemInPager = "page-item",
                                    ClassToApplyToLastListItemInPager = "page-item",
                                    ContainerDivClasses = new[] { "pagination-wrapper" },
                                    UlElementClasses = new[] { "pagination" },
                                    LiElementClasses = new[] { "page-item" },
                                    PageClasses = new[] { "page-link" }
                                })
            </div>
                        }
        </div>
    </div>

    <div id="deleteModal" class="delete-modal">
        <div class="delete-modal-content">
            <div class="delete-modal-header">
                <h3>Confirm Delete</h3>
                <button type="button" class="delete-modal-close" onclick="closeDeleteModal()">
                    <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
                        <line x1="18" y1="6" x2="6" y2="18" />
                        <line x1="6" y1="6" x2="18" y2="18" />
                    </svg>
                </button>
            </div>
            <div class="delete-modal-body">
                <div class="delete-warning-icon">
                    <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
                        <path d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z" />
                    </svg>
                </div>
                <p>Are you sure you want to delete <strong id="productNameToDelete"></strong>?</p>
                <p class="delete-warning">This action cannot be undone.</p>
            </div>
            <div class="delete-modal-footer">
                <button type="button" class="btn btn-secondary" onclick="closeDeleteModal()">Cancel</button>
                <button type="button" class="btn btn-delete" id="confirmDeleteBtn">Delete Product</button>
            </div>
        </div>
    </div>
</body>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/js/image-modal.js"></script>
    <script>
        const searchBox = document.getElementById("searchBox");
        const tableBody = document.querySelector("tbody");

        searchBox.addEventListener("input", function () {
            const searchText = searchBox.value;
            fetch(`/Product/SearchProducts?productName=${encodeURIComponent(searchText)}`)
                .then(response => response.json())
                .then(data => {
                    tableBody.innerHTML = ""; // Clear current rows

                    if (data.data && data.data.length > 0) {
                        data.data.forEach(product => {
                            console.log("Fetched product:", product);

                            const row = document.createElement("tr");
                            const imageHtml = product.imageUrl
                            ? `<img src="${product.imageUrl}" alt="${product.name}" class="product-thumbnail" />`
                                : `<div class="no-image-placeholder"><i class="bi bi-image"></i></div>`;

                            row.innerHTML = `
                                <td class="product-image">${imageHtml}</td>
                                <td class="product-name">${product.name}</td>
                                <td>${product.brand}</td>
                                <td class="price">$${parseFloat(product.price).toFixed(2)}</td>
                                <td class="stock">${product.stockQuantity}</td>
                                <td>${product.categoryName}</td>
                                <td>
                                    <a href="/Product/Details/${product.id}" class="btn btn-details">
                                        Details
                                    </a>
                                </td>
                                <td>
                                    <a href="/Product/Edit/${product.id}" class="btn btn-edit">
                                        Edit
                                    </a>
                                </td>
                                <td>
                                    <button type="button" class="btn btn-delete" onclick="showDeleteModal(${product.id}, '${product.name}')">
                                        Delete
                                    </button>
                                </td>
                            `;
                            tableBody.appendChild(row);
                        });
                    } else {
                        const noResultsRow = document.createElement("tr");
                        noResultsRow.innerHTML = `
                            <td colspan="9" class="no-results">
                                <i class="bi bi-search"></i>
                                <p>No products found matching "${searchText}"</p>
                            </td>
                        `;
                        tableBody.appendChild(noResultsRow);
                    }
                })
                .catch(error => {
                    console.error('Search error:', error);
                    showNotification("Search failed. Please try again.", "error");
                });
        });

        // Clear search when input is empty
        searchBox.addEventListener("input", function() {
            if (this.value === "") {
                location.reload();
            }
        });
    </script>

    <script src="~/js/admin-add-product.js"></script>

    <script>
        @if (TempData["SuccessMessage"] != null)
        {
                <text>
                    showNotification("@TempData["SuccessMessage"]", "success");
                </text>
        }

        @if (TempData["ErrorMessage"] != null)
        {
                <text>
                    showNotification("@TempData["ErrorMessage"]", "error");
                </text>
        }
    </script>

    <script>
        function showDeleteModal(productId, productName) {
            document.getElementById('productNameToDelete').innerText = productName;
            document.getElementById('deleteModal').style.display = 'flex';

            // Remove any existing event listeners to prevent multiple calls
            const confirmDeleteBtn = document.getElementById('confirmDeleteBtn');
            confirmDeleteBtn.removeEventListener('click', confirmDeleteHandler);

            // Define the event handler
            const confirmDeleteHandler = function() {
                window.location.href = `/Product/Delete/${productId}`;
            };

            // Add the event listener
            confirmDeleteBtn.addEventListener('click', confirmDeleteHandler);
        }

        function closeDeleteModal() {
            document.getElementById('deleteModal').style.display = 'none';
        }
    </script>
    <script src="~/js/delete-modal.js"></script>
    <script src="~/js/admin-navbar.js"></script>
